name: "Repository Get"
description: "Get the repository Details if they exist"

inputs:
 repo-name:
   description: "Name of the repository to attempt to get"
   required: true
 owner-name:
   description: "The repository owner"
   required: true
 pat-token:
  description: "The GitHub token to use. It must have enough privileges to make API calls"
  required: true

runs:
  using: composite
  steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Repo Get API call"
      id: repo_get_call
      shell: bash
      env:
        GH_TOKEN: ${{ inputs.pat-token }}
        repo_name: ${{ inputs.repo-name }}
        owner_name: ${{ inputs.owner-name }}
      run: |
        set +e
        STATUS_CODE=$(curl -o repo_get_output.json -s -w "%{http_code}\n" -H "Accept: application/vnd.github.v3+json" -H "Authorization: Bearer $GH_TOKEN" "https://api.github.com/repos/$owner_name/$repo_name")
        if [ $STATUS_CODE -eq 404 ]; then
          echo "API call failed with status code $STATUS_CODE, but we are continuing execution..."
          printf '{"response_status":"%s"}' $STATUS_CODE > repo_get_output.json
        elif [ $STATUS_CODE -eq 200 ]; then
          echo "API call succeeded with status code $STATUS_CODE"
          printf '{"response_status":"%s"}' $STATUS_CODE > repo_get_output.json
        else
          echo "API call failed with status code $STATUS_CODE"
          exit 1
        fi  
        set -e   
    - name: Set output  
      shell: bash
      id: set_output
      run: |
        echo "repo_get_output=$(cat repo_get_output.json) >> GITHUB_OUTPUT" 
      env:
        REPO_CHECK_STATUS: ${{ steps.set_output.outputs.repo_get_output }}
outputs:     
  repo_get_output:
    description: "The repository details"
    value: ${{ steps.set_output.outputs.repo_get_output }} 
