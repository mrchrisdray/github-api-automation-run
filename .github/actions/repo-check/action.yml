name: "Repository Get"
description: "Get the repository Details if they exist"

inputs:
 repo-name:
   description: "Name of the repository to attempt to get"
   required: true
 repo-description:
  description: "Description of the repository to create"
  required: false
  default: "This is a repo description"  
 owner-name:
   description: "The repository owner"
   required: true
 pat-token:
  description: "The GitHub token to use. It must have enough privileges to make API calls"
  required: true

runs:
  using: composite
  steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Repo Get API call"
      id: repo_get_call
      shell: bash
      env:
        GH_TOKEN: ${{ inputs.pat-token }}
        repo_name: ${{ inputs.repo-name }}
        owner_name: ${{ inputs.owner-name }}
      run: |
        set +e
        STATUS_CODE=$(curl -o repo_get_output.json -s -w "%{http_code}\n" -H "Accept: application/vnd.github.v3+json" -H "Authorization: Bearer $GH_TOKEN" "https://api.github.com/repos/$owner_name/$repo_name")
        if [ $STATUS_CODE -eq 404 ]; then
          echo "API call failed with status code $STATUS_CODE, but we are continuing execution..."
          printf '{"response_status":"%s"}' $STATUS_CODE > repo_get_output.json
        elif [ $STATUS_CODE -eq 200 ]; then
          echo "API call succeeded with status code $STATUS_CODE"
          printf '{"response_status":"%s"}' $STATUS_CODE > repo_get_output.json
        else
          echo "API call failed with status code $STATUS_CODE"
          exit 1
        fi  
        set -e
        echo "repo_get_output=$(cat repo_get_output.json) >> GITHUB_OUTPUT"    

    - name: Test output
      shell: bash
      id: test_repo_output
      run: |
        echo "Running tests..."
        echo "Repo check output: ${{ steps.repo_get_call.outputs.repo_get_output }}" 

    # - id: create_repo
    #   uses: ./.github/actions/create-repo
    #   with:
        # token: ${{ inputs.pat-token }}
        # repo_name: ${{ inputs.repo-name }}
        # owner_name: ${{ inputs.owner-name }}
    #     repo_description: ${{inputs.repository-description }}
    #   if: steps.repo-check.outputs.repo_get_output == '{"response_status":"404"}' 



    # outputs:     
#   repo_get_output:
#     description: "The repository get response status code"
#     value: ${{ steps.set_output.outputs.repo_get_output }} 