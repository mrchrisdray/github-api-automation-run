name: "Create New Repository"

on:
  workflow_dispatch:
    inputs:
      repository-name: 
        description: "Name of the new repository to be created" 
        required: true
        default: "my-new-repo-test" 
      repository_description: 
        description: "Name of the new repository to be created" 
        required: false
        default: "Creation of new test repo using api calls in GitHub"

jobs:
  repo_check_test:
   runs-on: ubuntu-latest
   name: "Check Repo Existence" 
   steps:
    - name: Run Check out
      uses: actions/checkout@v4
    - id: repo-check
      shell: bash
      env:
        GH_TOKEN: ${{ secrets.API_PAT_TOKEN }}
        repo_name: ${{ github.event.inputs.repository-name }}
        owner_name: ${{ github.repository_owner }}
      run: |
        set +e
        STATUS_CODE=$(curl -o repo_get_output.json -s -w "%{http_code}\n" -H "Accept: application/vnd.github.v3+json" -H "Authorization: Bearer $GH_TOKEN" "https://api.github.com/repos/$owner_name/$repo_name")
        if [ $STATUS_CODE -eq 404 ]; then
          echo "API call failed with status code $STATUS_CODE, but we are continuing execution..."
          printf '{"response_status":"%s"}' $STATUS_CODE > repo_get_output.json
        elif [ $STATUS_CODE -eq 200 ]; then
          echo "API call succeeded with status code $STATUS_CODE"
          printf '{"response_status":"%s"}' $STATUS_CODE > repo_get_output.json
        else
          echo "API call failed with status code $STATUS_CODE"
          exit 1
        fi  
        set -e

        echo "repo_get_output=$(< repo_get_output.json)" 
        echo "::set-output name=repo_get_output::$(< repo_get_output.json)" 
 
    - name: Test output
      shell: bash
      id: test_repo_output
      run: |
        echo "Running tests..."
        echo "Repo check output: ${{ steps.repo-check.outputs.repo_get_output }}"