name: "Create New Repository"

on:
  workflow_dispatch:
    inputs:
      repository-name: 
        description: "Name of the new repository to be created" 
        required: true
        default: "my-new-repo-test" 
      repository_description: 
        description: "Name of the new repository to be created" 
        required: false
        default: "Creation of new test repo using api calls in GitHub"

jobs:
  repo_check_test:
    runs-on: ubuntu-latest
    environment:
      name: "AppLoginAPIDemo"

    name: "Check Repo Existence and create when not found" 
    steps:
      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.APP_DEMO_KEY }}
          owner: ${{ github.repository_owner }}

      - name: Run Check out
        uses: actions/checkout@v4
      - id: repo-check
        shell: bash
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
          repo_name: ${{ github.event.inputs.repository-name }} 
        name: Check if Repository Exists
        run: |
          set +e
          STATUS_CODE=$(curl -o repo_get_output.json -s -w "%{http_code}\n" -H "Accept: application/vnd.github.v3+json" -H "Authorization: Bearer $GH_TOKEN" "https://api.github.com/repos/$owner_name/$repo_name")
          if [ $STATUS_CODE -eq 404 ]; then
            echo "API call failed with status code $STATUS_CODE, but we are continuing execution..."
            printf '{"response_status":"%s"}' $STATUS_CODE > repo_get_output.json
          elif [ $STATUS_CODE -eq 200 ]; then
            echo "API call succeeded with status code $STATUS_CODE"
            printf '{"response_status":"%s"}' $STATUS_CODE > repo_get_output.json
          else
            echo "API call failed with status code $STATUS_CODE"
            exit 1
          fi  
          set -e
          RESPONSE_STATUS=$(jq -r '.response_status' repo_get_output.json)
          echo "repo_get_output=$RESPONSE_STATUS" >> "$GITHUB_OUTPUT"
      - name: Test output
        shell: bash
        id: test_repo_output
        run: |
          echo "Running tests..."
          echo "Repo check output: ${{ steps.repo-check.outputs.repo_get_output }}"
      - name: Create repository
        if: steps.repo-check.outputs.repo_get_output == 404
        uses: ./.github/actions/repo-create
        with:
          token: ${{ steps.app-token.outputs.token }}
          repo_name: ${{ github.event.inputs.repository-name }}
          owner_name: ${{ github.repository_owner }}